{"version":3,"sources":["tooltip.js"],"names":["window","Tooltip","handleMouseOver","evt","tt","target","querySelector","style","display","classList","add","handleMouseOut","remove","setupTooltip","element","index","options","ttData","dataset","v5options","Object","assign","color","console","log","v6options","fontWeight","info","tooltip","backgroundColor","document","createElement","textContent","appendChild","addEventListener","init","selector","querySelectorAll","forEach"],"mappings":";;;;;;;;AAAA,CAAC,YAAW;AAERA,EAAAA,MAAM,CAACC,OAAP,GAAkB,YAAW;AAEzB,aAASC,eAAT,CAAyBC,GAAzB,EAA8B;AAC1B;AAEA;AAEA,UAAMC,EAAE,GAAGD,GAAG,CAACE,MAAJ,CAAWC,aAAX,CAAyB,eAAzB,CAAX;;AACA,UAAIF,EAAJ,EAAQ;AACJA,QAAAA,EAAE,CAACG,KAAH,CAASC,OAAT,GAAmB,OAAnB,CADI,CAEJ;;AACAJ,QAAAA,EAAE,CAACK,SAAH,CAAaC,GAAb,CAAiB,SAAjB;AACH;AACJ;;AAED,aAASC,cAAT,CAAwBR,GAAxB,EAA6B;AACzB;AAEA,UAAMC,EAAE,GAAGD,GAAG,CAACE,MAAJ,CAAWC,aAAX,CAAyB,eAAzB,CAAX;;AACA,UAAIF,EAAJ,EAAQ;AACJA,QAAAA,EAAE,CAACK,SAAH,CAAaG,MAAb,CAAoB,SAApB;AACAR,QAAAA,EAAE,CAACG,KAAH,CAASC,OAAT,GAAmB,MAAnB;AACH;AACJ;;AAED,aAASK,YAAT,CAAsBC,OAAtB,EAA+BC,KAA/B,EAAsCC,OAAtC,EAA+C;AAC3C,UAAMC,MAAM,GAAGH,OAAO,CAACI,OAAvB,CAD2C,CAG3C;AACA;;AACA,UAAMC,SAAS,GAAGC,MAAM,CAACC,MAAP,CACd;AACIC,QAAAA,KAAK,EAAE;AADX,OADc,EAIdN,OAJc,EAKdC,MALc,CAAlB;AAMAM,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBL,SAAzB,EAX2C,CAa3C;;AACA,UAAMM,SAAS;AACXH,QAAAA,KAAK,EAAE,MADI;AAEXI,QAAAA,UAAU,EAAE;AAFD,SAIRV,OAJQ,GAKRC,MALQ,CAAf;;AAOAM,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBC,SAAzB,EArB2C,CAuB3C;;AACA,UAAME,IAAI,GAAGV,MAAM,CAACW,OAApB;;AACA,UAAID,IAAJ,EAAU;AACNb,QAAAA,OAAO,CAACL,SAAR,CAAkBC,GAAlB,CAAsB,YAAtB;;AACA,YAAIe,SAAS,CAACH,KAAd,EAAqB;AACjBR,UAAAA,OAAO,CAACP,KAAR,CAAce,KAAd,GAAsBG,SAAS,CAACH,KAAhC;AACH;;AACD,YAAIG,SAAS,CAACI,eAAd,EAA+B;AAC3Bf,UAAAA,OAAO,CAACP,KAAR,CAAcsB,eAAd,GAAgCJ,SAAS,CAACI,eAA1C;AACH,SAPK,CAQN;;;AAEA,YAAMD,OAAO,GAAGE,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAhB;AACAH,QAAAA,OAAO,CAACI,WAAR,GAAsBL,IAAtB;AACAC,QAAAA,OAAO,CAACnB,SAAR,CAAkBC,GAAlB,CAAsB,cAAtB;AAEAI,QAAAA,OAAO,CAACmB,WAAR,CAAoBL,OAApB;AAEAd,QAAAA,OAAO,CAACoB,gBAAR,CAAyB,WAAzB,EAAsChC,eAAtC;AACAY,QAAAA,OAAO,CAACoB,gBAAR,CAAyB,UAAzB,EAAqCvB,cAArC;AACH;AAEJ;;AAED,aAASwB,IAAT,CAAcC,QAAd,EAAwBpB,OAAxB,EAAiC;AAC7B;;AACA;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACYc,MAAAA,QAAQ,CAACO,gBAAT,CAA0BD,QAA1B,EAAoCE,OAApC,CAA4C,UAACxB,OAAD,EAAUC,KAAV;AAAA,eAAoBF,YAAY,CAACC,OAAD,EAAUC,KAAV,EAAiBC,OAAjB,CAAhC;AAAA,OAA5C;AACH;;AAED,WAAO;AACHmB,MAAAA,IAAI,EAAEA;AADH,KAAP;AAGH,GAxFgB,EAAjB;AA0FH,CA5FD","sourcesContent":["(function() {\n\n    window.Tooltip = (function() {\n\n        function handleMouseOver(evt) {\n            // console.log('mouseover', evt.target)\n\n            // const rect = evt.target.getBoundingClientRect();\n\n            const tt = evt.target.querySelector('.tooltip-info');\n            if (tt) {\n                tt.style.display = 'block';           \n                // tt.style.top = (rect.y - 300) + 'px';\n                tt.classList.add(\"visible\");\n            }\n        }\n        \n        function handleMouseOut(evt) {\n            // console.log('mouseout', evt.target)\n\n            const tt = evt.target.querySelector('.tooltip-info');\n            if (tt) {\n                tt.classList.remove(\"visible\");\n                tt.style.display = 'none';\n            }\n        }\n\n        function setupTooltip(element, index, options) {\n            const ttData = element.dataset;\n\n            // combine values from multiple sources into one object\n            // the ES5 way:\n            const v5options = Object.assign(\n                {\n                    color: '#444',\n                }, \n                options, \n                ttData);\n            console.log(\"v5options\", v5options);\n            \n            // the ES6 way:\n            const v6options = {\n                color: '#444',\n                fontWeight: 'bold',\n\n                ...options,\n                ...ttData,\n            }\n            console.log(\"v6options\", v6options);\n\n            // const info = element.getAttribute(\"data-tooltip\");\n            const info = ttData.tooltip;\n            if (info) {\n                element.classList.add(\"tooltip-on\");\n                if (v6options.color) { \n                    element.style.color = v6options.color\n                }\n                if (v6options.backgroundColor) {\n                    element.style.backgroundColor = v6options.backgroundColor;\n                }\n                // element.style.left = element.style.left + 100;\n\n                const tooltip = document.createElement(\"div\");\n                tooltip.textContent = info;\n                tooltip.classList.add(\"tooltip-info\");\n    \n                element.appendChild(tooltip);\n\n                element.addEventListener(\"mouseover\", handleMouseOver);\n                element.addEventListener(\"mouseout\", handleMouseOut);\n            }\n\n        }\n\n        function init(selector, options) {\n            // console.log(\"setting up tooltips...\", selector)\n            /*  \n                function doA(paramA, paramB) { ... }\n                var doA = function(paramA, paramB) { ... }\n                var doA = (paramA, paramB) => { ... }\n                var doA = (paramA, paramB) => oneLineFunctionBody()\n                var doA = (paramA) => { ... }\n                var doA = paramA => { ... }\n            */\n            document.querySelectorAll(selector).forEach((element, index) => setupTooltip(element, index, options))\n        }\n\n        return {\n            init: init\n        }\n    })()\n\n})();"],"file":"tooltip.js"}